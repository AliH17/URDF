controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0

planner_server:
  ros__parameters:
    use_sim_time: false
    expected_planner_frequency: 20.0
    planner_plugin: "GridBased"  # Use NavFn (or another planner, if desired)
    tolerance: 0.5

recoveries_server:
  ros__parameters:
    use_sim_time: false

bt_navigator:
  ros__parameters:
    use_sim_time: false

waypoint_follower:
  ros__parameters:
    use_sim_time: false

global_costmap:
  ros__parameters:
    use_sim_time: false
    global_frame: "map"              # Must match the header of your occupancy grid from RTAB‑Map
    robot_base_frame: "dummy_link"    # Update if your robot uses "base_link"
    update_frequency: 1.0             # Update more frequently if needed (e.g., 1 Hz)
    publish_frequency: 1.0            # Publish frequency (try increasing if updates seem slow)
    rolling_window: false             # False for a static global map
    static_map: true                  # Use the occupancy grid from RTAB‑Map
    plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

static_layer:
  ros__parameters:
    map_topic: "/map"                 # RTAB‑Map should publish the occupancy grid here
    subscribe_to_updates: true        # Automatically update the map when RTAB‑Map republishes

local_costmap:
  ros__parameters:
    use_sim_time: false
    global_frame: "odom"              # The odometry frame
    robot_base_frame: "dummy_link"    # Must match your robot's base frame used in TF
    update_frequency: 5.0
    publish_frequency: 2.0
    rolling_window: true              # Local costmap moves with the robot
    width: 4.0                        # Local costmap width (meters)
    height: 4.0                       # Local costmap height (meters)
    resolution: 0.025                 # Size of each cell in meters
    observation_sources: point_cloud_sensor
    point_cloud_sensor: {
      sensor_frame: "_camera_link",     # Adjust if your RealSense publishes in another frame
      data_type: "PointCloud2",
      topic: "/camera/depth/color/points",  # Verify this matches your RealSense point cloud topic
      expected_update_rate: 0.0,
      marking: true,
      clearing: true,
      min_obstacle_height: -99999.0,
      max_obstacle_height: 99999.0
    }

amcl:
  ros__parameters:
    use_sim_time: false
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    base_frame_id: "dummy_link"
    global_frame_id: "map"
    odom_frame_id: "odom"
